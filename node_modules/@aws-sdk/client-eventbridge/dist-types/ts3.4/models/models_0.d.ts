import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { EventBridgeServiceException as __BaseException } from "./EventBridgeServiceException";
export interface ActivateEventSourceRequest {
    
    Name: string | undefined;
}

export declare class ConcurrentModificationException extends __BaseException {
    readonly name: "ConcurrentModificationException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<ConcurrentModificationException, __BaseException>);
}

export declare class InternalException extends __BaseException {
    readonly name: "InternalException";
    readonly $fault: "server";
    
    constructor(opts: __ExceptionOptionType<InternalException, __BaseException>);
}

export declare class InvalidStateException extends __BaseException {
    readonly name: "InvalidStateException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<InvalidStateException, __BaseException>);
}

export declare class OperationDisabledException extends __BaseException {
    readonly name: "OperationDisabledException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<OperationDisabledException, __BaseException>);
}

export declare class ResourceNotFoundException extends __BaseException {
    readonly name: "ResourceNotFoundException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>);
}
export declare enum ApiDestinationState {
    ACTIVE = "ACTIVE",
    INACTIVE = "INACTIVE"
}
export declare enum ApiDestinationHttpMethod {
    DELETE = "DELETE",
    GET = "GET",
    HEAD = "HEAD",
    OPTIONS = "OPTIONS",
    PATCH = "PATCH",
    POST = "POST",
    PUT = "PUT"
}

export interface ApiDestination {
    
    ApiDestinationArn?: string;
    
    Name?: string;
    
    ApiDestinationState?: ApiDestinationState | string;
    
    ConnectionArn?: string;
    
    InvocationEndpoint?: string;
    
    HttpMethod?: ApiDestinationHttpMethod | string;
    
    InvocationRateLimitPerSecond?: number;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
}
export declare enum ArchiveState {
    CREATE_FAILED = "CREATE_FAILED",
    CREATING = "CREATING",
    DISABLED = "DISABLED",
    ENABLED = "ENABLED",
    UPDATE_FAILED = "UPDATE_FAILED",
    UPDATING = "UPDATING"
}

export interface Archive {
    
    ArchiveName?: string;
    
    EventSourceArn?: string;
    
    State?: ArchiveState | string;
    
    StateReason?: string;
    
    RetentionDays?: number;
    
    SizeBytes?: number;
    
    EventCount?: number;
    
    CreationTime?: Date;
}
export declare enum AssignPublicIp {
    DISABLED = "DISABLED",
    ENABLED = "ENABLED"
}
export interface CancelReplayRequest {
    
    ReplayName: string | undefined;
}
export declare enum ReplayState {
    CANCELLED = "CANCELLED",
    CANCELLING = "CANCELLING",
    COMPLETED = "COMPLETED",
    FAILED = "FAILED",
    RUNNING = "RUNNING",
    STARTING = "STARTING"
}
export interface CancelReplayResponse {
    
    ReplayArn?: string;
    
    State?: ReplayState | string;
    
    StateReason?: string;
}

export declare class IllegalStatusException extends __BaseException {
    readonly name: "IllegalStatusException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<IllegalStatusException, __BaseException>);
}
export interface CreateApiDestinationRequest {
    
    Name: string | undefined;
    
    Description?: string;
    
    ConnectionArn: string | undefined;
    
    InvocationEndpoint: string | undefined;
    
    HttpMethod: ApiDestinationHttpMethod | string | undefined;
    
    InvocationRateLimitPerSecond?: number;
}
export interface CreateApiDestinationResponse {
    
    ApiDestinationArn?: string;
    
    ApiDestinationState?: ApiDestinationState | string;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
}

export declare class LimitExceededException extends __BaseException {
    readonly name: "LimitExceededException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<LimitExceededException, __BaseException>);
}

export declare class ResourceAlreadyExistsException extends __BaseException {
    readonly name: "ResourceAlreadyExistsException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>);
}
export interface CreateArchiveRequest {
    
    ArchiveName: string | undefined;
    
    EventSourceArn: string | undefined;
    
    Description?: string;
    
    EventPattern?: string;
    
    RetentionDays?: number;
}
export interface CreateArchiveResponse {
    
    ArchiveArn?: string;
    
    State?: ArchiveState | string;
    
    StateReason?: string;
    
    CreationTime?: Date;
}

export declare class InvalidEventPatternException extends __BaseException {
    readonly name: "InvalidEventPatternException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<InvalidEventPatternException, __BaseException>);
}
export declare enum ConnectionAuthorizationType {
    API_KEY = "API_KEY",
    BASIC = "BASIC",
    OAUTH_CLIENT_CREDENTIALS = "OAUTH_CLIENT_CREDENTIALS"
}

export interface CreateConnectionApiKeyAuthRequestParameters {
    
    ApiKeyName: string | undefined;
    
    ApiKeyValue: string | undefined;
}

export interface CreateConnectionBasicAuthRequestParameters {
    
    Username: string | undefined;
    
    Password: string | undefined;
}

export interface ConnectionBodyParameter {
    
    Key?: string;
    
    Value?: string;
    
    IsValueSecret?: boolean;
}

export interface ConnectionHeaderParameter {
    
    Key?: string;
    
    Value?: string;
    
    IsValueSecret?: boolean;
}

export interface ConnectionQueryStringParameter {
    
    Key?: string;
    
    Value?: string;
    
    IsValueSecret?: boolean;
}

export interface ConnectionHttpParameters {
    
    HeaderParameters?: ConnectionHeaderParameter[];
    
    QueryStringParameters?: ConnectionQueryStringParameter[];
    
    BodyParameters?: ConnectionBodyParameter[];
}

export interface CreateConnectionOAuthClientRequestParameters {
    
    ClientID: string | undefined;
    
    ClientSecret: string | undefined;
}
export declare enum ConnectionOAuthHttpMethod {
    GET = "GET",
    POST = "POST",
    PUT = "PUT"
}

export interface CreateConnectionOAuthRequestParameters {
    
    ClientParameters: CreateConnectionOAuthClientRequestParameters | undefined;
    
    AuthorizationEndpoint: string | undefined;
    
    HttpMethod: ConnectionOAuthHttpMethod | string | undefined;
    
    OAuthHttpParameters?: ConnectionHttpParameters;
}

export interface CreateConnectionAuthRequestParameters {
    
    BasicAuthParameters?: CreateConnectionBasicAuthRequestParameters;
    
    OAuthParameters?: CreateConnectionOAuthRequestParameters;
    
    ApiKeyAuthParameters?: CreateConnectionApiKeyAuthRequestParameters;
    
    InvocationHttpParameters?: ConnectionHttpParameters;
}
export interface CreateConnectionRequest {
    
    Name: string | undefined;
    
    Description?: string;
    
    AuthorizationType: ConnectionAuthorizationType | string | undefined;
    
    AuthParameters: CreateConnectionAuthRequestParameters | undefined;
}
export declare enum ConnectionState {
    AUTHORIZED = "AUTHORIZED",
    AUTHORIZING = "AUTHORIZING",
    CREATING = "CREATING",
    DEAUTHORIZED = "DEAUTHORIZED",
    DEAUTHORIZING = "DEAUTHORIZING",
    DELETING = "DELETING",
    UPDATING = "UPDATING"
}
export interface CreateConnectionResponse {
    
    ConnectionArn?: string;
    
    ConnectionState?: ConnectionState | string;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
}

export interface EndpointEventBus {
    
    EventBusArn: string | undefined;
}
export declare enum ReplicationState {
    DISABLED = "DISABLED",
    ENABLED = "ENABLED"
}

export interface ReplicationConfig {
    
    State?: ReplicationState | string;
}

export interface Primary {
    
    HealthCheck: string | undefined;
}

export interface Secondary {
    
    Route: string | undefined;
}

export interface FailoverConfig {
    
    Primary: Primary | undefined;
    
    Secondary: Secondary | undefined;
}

export interface RoutingConfig {
    
    FailoverConfig: FailoverConfig | undefined;
}
export interface CreateEndpointRequest {
    
    Name: string | undefined;
    
    Description?: string;
    
    RoutingConfig: RoutingConfig | undefined;
    
    ReplicationConfig?: ReplicationConfig;
    
    EventBuses: EndpointEventBus[] | undefined;
    
    RoleArn?: string;
}
export declare enum EndpointState {
    ACTIVE = "ACTIVE",
    CREATE_FAILED = "CREATE_FAILED",
    CREATING = "CREATING",
    DELETE_FAILED = "DELETE_FAILED",
    DELETING = "DELETING",
    UPDATE_FAILED = "UPDATE_FAILED",
    UPDATING = "UPDATING"
}
export interface CreateEndpointResponse {
    
    Name?: string;
    
    Arn?: string;
    
    RoutingConfig?: RoutingConfig;
    
    ReplicationConfig?: ReplicationConfig;
    
    EventBuses?: EndpointEventBus[];
    
    RoleArn?: string;
    
    State?: EndpointState | string;
}

export interface Tag {
    
    Key: string | undefined;
    
    Value: string | undefined;
}
export interface CreateEventBusRequest {
    
    Name: string | undefined;
    
    EventSourceName?: string;
    
    Tags?: Tag[];
}
export interface CreateEventBusResponse {
    
    EventBusArn?: string;
}
export interface CreatePartnerEventSourceRequest {
    
    Name: string | undefined;
    
    Account: string | undefined;
}
export interface CreatePartnerEventSourceResponse {
    
    EventSourceArn?: string;
}
export interface DeactivateEventSourceRequest {
    
    Name: string | undefined;
}
export interface DeauthorizeConnectionRequest {
    
    Name: string | undefined;
}
export interface DeauthorizeConnectionResponse {
    
    ConnectionArn?: string;
    
    ConnectionState?: ConnectionState | string;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
    
    LastAuthorizedTime?: Date;
}
export interface DeleteApiDestinationRequest {
    
    Name: string | undefined;
}
export interface DeleteApiDestinationResponse {
}
export interface DeleteArchiveRequest {
    
    ArchiveName: string | undefined;
}
export interface DeleteArchiveResponse {
}
export interface DeleteConnectionRequest {
    
    Name: string | undefined;
}
export interface DeleteConnectionResponse {
    
    ConnectionArn?: string;
    
    ConnectionState?: ConnectionState | string;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
    
    LastAuthorizedTime?: Date;
}
export interface DeleteEndpointRequest {
    
    Name: string | undefined;
}
export interface DeleteEndpointResponse {
}
export interface DeleteEventBusRequest {
    
    Name: string | undefined;
}
export interface DeletePartnerEventSourceRequest {
    
    Name: string | undefined;
    
    Account: string | undefined;
}
export interface DeleteRuleRequest {
    
    Name: string | undefined;
    
    EventBusName?: string;
    
    Force?: boolean;
}

export declare class ManagedRuleException extends __BaseException {
    readonly name: "ManagedRuleException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<ManagedRuleException, __BaseException>);
}
export interface DescribeApiDestinationRequest {
    
    Name: string | undefined;
}
export interface DescribeApiDestinationResponse {
    
    ApiDestinationArn?: string;
    
    Name?: string;
    
    Description?: string;
    
    ApiDestinationState?: ApiDestinationState | string;
    
    ConnectionArn?: string;
    
    InvocationEndpoint?: string;
    
    HttpMethod?: ApiDestinationHttpMethod | string;
    
    InvocationRateLimitPerSecond?: number;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
}
export interface DescribeArchiveRequest {
    
    ArchiveName: string | undefined;
}
export interface DescribeArchiveResponse {
    
    ArchiveArn?: string;
    
    ArchiveName?: string;
    
    EventSourceArn?: string;
    
    Description?: string;
    
    EventPattern?: string;
    
    State?: ArchiveState | string;
    
    StateReason?: string;
    
    RetentionDays?: number;
    
    SizeBytes?: number;
    
    EventCount?: number;
    
    CreationTime?: Date;
}
export interface DescribeConnectionRequest {
    
    Name: string | undefined;
}

export interface ConnectionApiKeyAuthResponseParameters {
    
    ApiKeyName?: string;
}

export interface ConnectionBasicAuthResponseParameters {
    
    Username?: string;
}

export interface ConnectionOAuthClientResponseParameters {
    
    ClientID?: string;
}

export interface ConnectionOAuthResponseParameters {
    
    ClientParameters?: ConnectionOAuthClientResponseParameters;
    
    AuthorizationEndpoint?: string;
    
    HttpMethod?: ConnectionOAuthHttpMethod | string;
    
    OAuthHttpParameters?: ConnectionHttpParameters;
}

export interface ConnectionAuthResponseParameters {
    
    BasicAuthParameters?: ConnectionBasicAuthResponseParameters;
    
    OAuthParameters?: ConnectionOAuthResponseParameters;
    
    ApiKeyAuthParameters?: ConnectionApiKeyAuthResponseParameters;
    
    InvocationHttpParameters?: ConnectionHttpParameters;
}
export interface DescribeConnectionResponse {
    
    ConnectionArn?: string;
    
    Name?: string;
    
    Description?: string;
    
    ConnectionState?: ConnectionState | string;
    
    StateReason?: string;
    
    AuthorizationType?: ConnectionAuthorizationType | string;
    
    SecretArn?: string;
    
    AuthParameters?: ConnectionAuthResponseParameters;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
    
    LastAuthorizedTime?: Date;
}
export interface DescribeEndpointRequest {
    
    Name: string | undefined;
    
    HomeRegion?: string;
}
export interface DescribeEndpointResponse {
    
    Name?: string;
    
    Description?: string;
    
    Arn?: string;
    
    RoutingConfig?: RoutingConfig;
    
    ReplicationConfig?: ReplicationConfig;
    
    EventBuses?: EndpointEventBus[];
    
    RoleArn?: string;
    
    EndpointId?: string;
    
    EndpointUrl?: string;
    
    State?: EndpointState | string;
    
    StateReason?: string;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
}
export interface DescribeEventBusRequest {
    
    Name?: string;
}
export interface DescribeEventBusResponse {
    
    Name?: string;
    
    Arn?: string;
    
    Policy?: string;
}
export interface DescribeEventSourceRequest {
    
    Name: string | undefined;
}
export declare enum EventSourceState {
    ACTIVE = "ACTIVE",
    DELETED = "DELETED",
    PENDING = "PENDING"
}
export interface DescribeEventSourceResponse {
    
    Arn?: string;
    
    CreatedBy?: string;
    
    CreationTime?: Date;
    
    ExpirationTime?: Date;
    
    Name?: string;
    
    State?: EventSourceState | string;
}
export interface DescribePartnerEventSourceRequest {
    
    Name: string | undefined;
}
export interface DescribePartnerEventSourceResponse {
    
    Arn?: string;
    
    Name?: string;
}
export interface DescribeReplayRequest {
    
    ReplayName: string | undefined;
}

export interface ReplayDestination {
    
    Arn: string | undefined;
    
    FilterArns?: string[];
}
export interface DescribeReplayResponse {
    
    ReplayName?: string;
    
    ReplayArn?: string;
    
    Description?: string;
    
    State?: ReplayState | string;
    
    StateReason?: string;
    
    EventSourceArn?: string;
    
    Destination?: ReplayDestination;
    
    EventStartTime?: Date;
    
    EventEndTime?: Date;
    
    EventLastReplayedTime?: Date;
    
    ReplayStartTime?: Date;
    
    ReplayEndTime?: Date;
}
export interface DescribeRuleRequest {
    
    Name: string | undefined;
    
    EventBusName?: string;
}
export declare enum RuleState {
    DISABLED = "DISABLED",
    ENABLED = "ENABLED"
}
export interface DescribeRuleResponse {
    
    Name?: string;
    
    Arn?: string;
    
    EventPattern?: string;
    
    ScheduleExpression?: string;
    
    State?: RuleState | string;
    
    Description?: string;
    
    RoleArn?: string;
    
    ManagedBy?: string;
    
    EventBusName?: string;
    
    CreatedBy?: string;
}
export interface DisableRuleRequest {
    
    Name: string | undefined;
    
    EventBusName?: string;
}
export interface EnableRuleRequest {
    
    Name: string | undefined;
    
    EventBusName?: string;
}
export interface ListApiDestinationsRequest {
    
    NamePrefix?: string;
    
    ConnectionArn?: string;
    
    NextToken?: string;
    
    Limit?: number;
}
export interface ListApiDestinationsResponse {
    
    ApiDestinations?: ApiDestination[];
    
    NextToken?: string;
}
export interface ListArchivesRequest {
    
    NamePrefix?: string;
    
    EventSourceArn?: string;
    
    State?: ArchiveState | string;
    
    NextToken?: string;
    
    Limit?: number;
}
export interface ListArchivesResponse {
    
    Archives?: Archive[];
    
    NextToken?: string;
}
export interface ListConnectionsRequest {
    
    NamePrefix?: string;
    
    ConnectionState?: ConnectionState | string;
    
    NextToken?: string;
    
    Limit?: number;
}

export interface Connection {
    
    ConnectionArn?: string;
    
    Name?: string;
    
    ConnectionState?: ConnectionState | string;
    
    StateReason?: string;
    
    AuthorizationType?: ConnectionAuthorizationType | string;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
    
    LastAuthorizedTime?: Date;
}
export interface ListConnectionsResponse {
    
    Connections?: Connection[];
    
    NextToken?: string;
}
export interface ListEndpointsRequest {
    
    NamePrefix?: string;
    
    HomeRegion?: string;
    
    NextToken?: string;
    
    MaxResults?: number;
}

export interface Endpoint {
    
    Name?: string;
    
    Description?: string;
    
    Arn?: string;
    
    RoutingConfig?: RoutingConfig;
    
    ReplicationConfig?: ReplicationConfig;
    
    EventBuses?: EndpointEventBus[];
    
    RoleArn?: string;
    
    EndpointId?: string;
    
    EndpointUrl?: string;
    
    State?: EndpointState | string;
    
    StateReason?: string;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
}
export interface ListEndpointsResponse {
    
    Endpoints?: Endpoint[];
    
    NextToken?: string;
}
export interface ListEventBusesRequest {
    
    NamePrefix?: string;
    
    NextToken?: string;
    
    Limit?: number;
}

export interface EventBus {
    
    Name?: string;
    
    Arn?: string;
    
    Policy?: string;
}
export interface ListEventBusesResponse {
    
    EventBuses?: EventBus[];
    
    NextToken?: string;
}
export interface ListEventSourcesRequest {
    
    NamePrefix?: string;
    
    NextToken?: string;
    
    Limit?: number;
}

export interface EventSource {
    
    Arn?: string;
    
    CreatedBy?: string;
    
    CreationTime?: Date;
    
    ExpirationTime?: Date;
    
    Name?: string;
    
    State?: EventSourceState | string;
}
export interface ListEventSourcesResponse {
    
    EventSources?: EventSource[];
    
    NextToken?: string;
}
export interface ListPartnerEventSourceAccountsRequest {
    
    EventSourceName: string | undefined;
    
    NextToken?: string;
    
    Limit?: number;
}

export interface PartnerEventSourceAccount {
    
    Account?: string;
    
    CreationTime?: Date;
    
    ExpirationTime?: Date;
    
    State?: EventSourceState | string;
}
export interface ListPartnerEventSourceAccountsResponse {
    
    PartnerEventSourceAccounts?: PartnerEventSourceAccount[];
    
    NextToken?: string;
}
export interface ListPartnerEventSourcesRequest {
    
    NamePrefix: string | undefined;
    
    NextToken?: string;
    
    Limit?: number;
}

export interface PartnerEventSource {
    
    Arn?: string;
    
    Name?: string;
}
export interface ListPartnerEventSourcesResponse {
    
    PartnerEventSources?: PartnerEventSource[];
    
    NextToken?: string;
}
export interface ListReplaysRequest {
    
    NamePrefix?: string;
    
    State?: ReplayState | string;
    
    EventSourceArn?: string;
    
    NextToken?: string;
    
    Limit?: number;
}

export interface Replay {
    
    ReplayName?: string;
    
    EventSourceArn?: string;
    
    State?: ReplayState | string;
    
    StateReason?: string;
    
    EventStartTime?: Date;
    
    EventEndTime?: Date;
    
    EventLastReplayedTime?: Date;
    
    ReplayStartTime?: Date;
    
    ReplayEndTime?: Date;
}
export interface ListReplaysResponse {
    
    Replays?: Replay[];
    
    NextToken?: string;
}
export interface ListRuleNamesByTargetRequest {
    
    TargetArn: string | undefined;
    
    EventBusName?: string;
    
    NextToken?: string;
    
    Limit?: number;
}
export interface ListRuleNamesByTargetResponse {
    
    RuleNames?: string[];
    
    NextToken?: string;
}
export interface ListRulesRequest {
    
    NamePrefix?: string;
    
    EventBusName?: string;
    
    NextToken?: string;
    
    Limit?: number;
}

export interface Rule {
    
    Name?: string;
    
    Arn?: string;
    
    EventPattern?: string;
    
    State?: RuleState | string;
    
    Description?: string;
    
    ScheduleExpression?: string;
    
    RoleArn?: string;
    
    ManagedBy?: string;
    
    EventBusName?: string;
}
export interface ListRulesResponse {
    
    Rules?: Rule[];
    
    NextToken?: string;
}
export interface ListTagsForResourceRequest {
    
    ResourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
    
    Tags?: Tag[];
}
export interface ListTargetsByRuleRequest {
    
    Rule: string | undefined;
    
    EventBusName?: string;
    
    NextToken?: string;
    
    Limit?: number;
}

export interface BatchArrayProperties {
    
    Size?: number;
}

export interface BatchRetryStrategy {
    
    Attempts?: number;
}

export interface BatchParameters {
    
    JobDefinition: string | undefined;
    
    JobName: string | undefined;
    
    ArrayProperties?: BatchArrayProperties;
    
    RetryStrategy?: BatchRetryStrategy;
}

export interface DeadLetterConfig {
    
    Arn?: string;
}

export interface CapacityProviderStrategyItem {
    
    capacityProvider: string | undefined;
    
    weight?: number;
    
    base?: number;
}
export declare enum LaunchType {
    EC2 = "EC2",
    EXTERNAL = "EXTERNAL",
    FARGATE = "FARGATE"
}

export interface AwsVpcConfiguration {
    
    Subnets: string[] | undefined;
    
    SecurityGroups?: string[];
    
    AssignPublicIp?: AssignPublicIp | string;
}

export interface NetworkConfiguration {
    
    awsvpcConfiguration?: AwsVpcConfiguration;
}
export declare enum PlacementConstraintType {
    DISTINCT_INSTANCE = "distinctInstance",
    MEMBER_OF = "memberOf"
}

export interface PlacementConstraint {
    
    type?: PlacementConstraintType | string;
    
    expression?: string;
}
export declare enum PlacementStrategyType {
    BINPACK = "binpack",
    RANDOM = "random",
    SPREAD = "spread"
}

export interface PlacementStrategy {
    
    type?: PlacementStrategyType | string;
    
    field?: string;
}
export declare enum PropagateTags {
    TASK_DEFINITION = "TASK_DEFINITION"
}

export interface EcsParameters {
    
    TaskDefinitionArn: string | undefined;
    
    TaskCount?: number;
    
    LaunchType?: LaunchType | string;
    
    NetworkConfiguration?: NetworkConfiguration;
    
    PlatformVersion?: string;
    
    Group?: string;
    
    CapacityProviderStrategy?: CapacityProviderStrategyItem[];
    
    EnableECSManagedTags?: boolean;
    
    EnableExecuteCommand?: boolean;
    
    PlacementConstraints?: PlacementConstraint[];
    
    PlacementStrategy?: PlacementStrategy[];
    
    PropagateTags?: PropagateTags | string;
    
    ReferenceId?: string;
    
    Tags?: Tag[];
}

export interface HttpParameters {
    
    PathParameterValues?: string[];
    
    HeaderParameters?: Record<string, string>;
    
    QueryStringParameters?: Record<string, string>;
}

export interface InputTransformer {
    
    InputPathsMap?: Record<string, string>;
    
    InputTemplate: string | undefined;
}

export interface KinesisParameters {
    
    PartitionKeyPath: string | undefined;
}

export interface RedshiftDataParameters {
    
    SecretManagerArn?: string;
    
    Database: string | undefined;
    
    DbUser?: string;
    
    Sql: string | undefined;
    
    StatementName?: string;
    
    WithEvent?: boolean;
}

export interface RetryPolicy {
    
    MaximumRetryAttempts?: number;
    
    MaximumEventAgeInSeconds?: number;
}

export interface RunCommandTarget {
    
    Key: string | undefined;
    
    Values: string[] | undefined;
}

export interface RunCommandParameters {
    
    RunCommandTargets: RunCommandTarget[] | undefined;
}

export interface SageMakerPipelineParameter {
    
    Name: string | undefined;
    
    Value: string | undefined;
}

export interface SageMakerPipelineParameters {
    
    PipelineParameterList?: SageMakerPipelineParameter[];
}

export interface SqsParameters {
    
    MessageGroupId?: string;
}

export interface Target {
    
    Id: string | undefined;
    
    Arn: string | undefined;
    
    RoleArn?: string;
    
    Input?: string;
    
    InputPath?: string;
    
    InputTransformer?: InputTransformer;
    
    KinesisParameters?: KinesisParameters;
    
    RunCommandParameters?: RunCommandParameters;
    
    EcsParameters?: EcsParameters;
    
    BatchParameters?: BatchParameters;
    
    SqsParameters?: SqsParameters;
    
    HttpParameters?: HttpParameters;
    
    RedshiftDataParameters?: RedshiftDataParameters;
    
    SageMakerPipelineParameters?: SageMakerPipelineParameters;
    
    DeadLetterConfig?: DeadLetterConfig;
    
    RetryPolicy?: RetryPolicy;
}
export interface ListTargetsByRuleResponse {
    
    Targets?: Target[];
    
    NextToken?: string;
}

export interface PutEventsRequestEntry {
    
    Time?: Date;
    
    Source?: string;
    
    Resources?: string[];
    
    DetailType?: string;
    
    Detail?: string;
    
    EventBusName?: string;
    
    TraceHeader?: string;
}
export interface PutEventsRequest {
    
    Entries: PutEventsRequestEntry[] | undefined;
    
    EndpointId?: string;
}

export interface PutEventsResultEntry {
    
    EventId?: string;
    
    ErrorCode?: string;
    
    ErrorMessage?: string;
}
export interface PutEventsResponse {
    
    FailedEntryCount?: number;
    
    Entries?: PutEventsResultEntry[];
}

export interface PutPartnerEventsRequestEntry {
    
    Time?: Date;
    
    Source?: string;
    
    Resources?: string[];
    
    DetailType?: string;
    
    Detail?: string;
}
export interface PutPartnerEventsRequest {
    
    Entries: PutPartnerEventsRequestEntry[] | undefined;
}

export interface PutPartnerEventsResultEntry {
    
    EventId?: string;
    
    ErrorCode?: string;
    
    ErrorMessage?: string;
}
export interface PutPartnerEventsResponse {
    
    FailedEntryCount?: number;
    
    Entries?: PutPartnerEventsResultEntry[];
}

export declare class PolicyLengthExceededException extends __BaseException {
    readonly name: "PolicyLengthExceededException";
    readonly $fault: "client";
    
    constructor(opts: __ExceptionOptionType<PolicyLengthExceededException, __BaseException>);
}

export interface Condition {
    
    Type: string | undefined;
    
    Key: string | undefined;
    
    Value: string | undefined;
}
export interface PutPermissionRequest {
    
    EventBusName?: string;
    
    Action?: string;
    
    Principal?: string;
    
    StatementId?: string;
    
    Condition?: Condition;
    
    Policy?: string;
}
export interface PutRuleRequest {
    
    Name: string | undefined;
    
    ScheduleExpression?: string;
    
    EventPattern?: string;
    
    State?: RuleState | string;
    
    Description?: string;
    
    RoleArn?: string;
    
    Tags?: Tag[];
    
    EventBusName?: string;
}
export interface PutRuleResponse {
    
    RuleArn?: string;
}
export interface PutTargetsRequest {
    
    Rule: string | undefined;
    
    EventBusName?: string;
    
    Targets: Target[] | undefined;
}

export interface PutTargetsResultEntry {
    
    TargetId?: string;
    
    ErrorCode?: string;
    
    ErrorMessage?: string;
}
export interface PutTargetsResponse {
    
    FailedEntryCount?: number;
    
    FailedEntries?: PutTargetsResultEntry[];
}
export interface RemovePermissionRequest {
    
    StatementId?: string;
    
    RemoveAllPermissions?: boolean;
    
    EventBusName?: string;
}
export interface RemoveTargetsRequest {
    
    Rule: string | undefined;
    
    EventBusName?: string;
    
    Ids: string[] | undefined;
    
    Force?: boolean;
}

export interface RemoveTargetsResultEntry {
    
    TargetId?: string;
    
    ErrorCode?: string;
    
    ErrorMessage?: string;
}
export interface RemoveTargetsResponse {
    
    FailedEntryCount?: number;
    
    FailedEntries?: RemoveTargetsResultEntry[];
}
export interface StartReplayRequest {
    
    ReplayName: string | undefined;
    
    Description?: string;
    
    EventSourceArn: string | undefined;
    
    EventStartTime: Date | undefined;
    
    EventEndTime: Date | undefined;
    
    Destination: ReplayDestination | undefined;
}
export interface StartReplayResponse {
    
    ReplayArn?: string;
    
    State?: ReplayState | string;
    
    StateReason?: string;
    
    ReplayStartTime?: Date;
}
export interface TagResourceRequest {
    
    ResourceARN: string | undefined;
    
    Tags: Tag[] | undefined;
}
export interface TagResourceResponse {
}
export interface TestEventPatternRequest {
    
    EventPattern: string | undefined;
    
    Event: string | undefined;
}
export interface TestEventPatternResponse {
    
    Result?: boolean;
}
export interface UntagResourceRequest {
    
    ResourceARN: string | undefined;
    
    TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {
}
export interface UpdateApiDestinationRequest {
    
    Name: string | undefined;
    
    Description?: string;
    
    ConnectionArn?: string;
    
    InvocationEndpoint?: string;
    
    HttpMethod?: ApiDestinationHttpMethod | string;
    
    InvocationRateLimitPerSecond?: number;
}
export interface UpdateApiDestinationResponse {
    
    ApiDestinationArn?: string;
    
    ApiDestinationState?: ApiDestinationState | string;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
}
export interface UpdateArchiveRequest {
    
    ArchiveName: string | undefined;
    
    Description?: string;
    
    EventPattern?: string;
    
    RetentionDays?: number;
}
export interface UpdateArchiveResponse {
    
    ArchiveArn?: string;
    
    State?: ArchiveState | string;
    
    StateReason?: string;
    
    CreationTime?: Date;
}

export interface UpdateConnectionApiKeyAuthRequestParameters {
    
    ApiKeyName?: string;
    
    ApiKeyValue?: string;
}

export interface UpdateConnectionBasicAuthRequestParameters {
    
    Username?: string;
    
    Password?: string;
}

export interface UpdateConnectionOAuthClientRequestParameters {
    
    ClientID?: string;
    
    ClientSecret?: string;
}

export interface UpdateConnectionOAuthRequestParameters {
    
    ClientParameters?: UpdateConnectionOAuthClientRequestParameters;
    
    AuthorizationEndpoint?: string;
    
    HttpMethod?: ConnectionOAuthHttpMethod | string;
    
    OAuthHttpParameters?: ConnectionHttpParameters;
}

export interface UpdateConnectionAuthRequestParameters {
    
    BasicAuthParameters?: UpdateConnectionBasicAuthRequestParameters;
    
    OAuthParameters?: UpdateConnectionOAuthRequestParameters;
    
    ApiKeyAuthParameters?: UpdateConnectionApiKeyAuthRequestParameters;
    
    InvocationHttpParameters?: ConnectionHttpParameters;
}
export interface UpdateConnectionRequest {
    
    Name: string | undefined;
    
    Description?: string;
    
    AuthorizationType?: ConnectionAuthorizationType | string;
    
    AuthParameters?: UpdateConnectionAuthRequestParameters;
}
export interface UpdateConnectionResponse {
    
    ConnectionArn?: string;
    
    ConnectionState?: ConnectionState | string;
    
    CreationTime?: Date;
    
    LastModifiedTime?: Date;
    
    LastAuthorizedTime?: Date;
}
export interface UpdateEndpointRequest {
    
    Name: string | undefined;
    
    Description?: string;
    
    RoutingConfig?: RoutingConfig;
    
    ReplicationConfig?: ReplicationConfig;
    
    EventBuses?: EndpointEventBus[];
    
    RoleArn?: string;
}
export interface UpdateEndpointResponse {
    
    Name?: string;
    
    Arn?: string;
    
    RoutingConfig?: RoutingConfig;
    
    ReplicationConfig?: ReplicationConfig;
    
    EventBuses?: EndpointEventBus[];
    
    RoleArn?: string;
    
    EndpointId?: string;
    
    EndpointUrl?: string;
    
    State?: EndpointState | string;
}

export declare const ActivateEventSourceRequestFilterSensitiveLog: (obj: ActivateEventSourceRequest) => any;

export declare const ApiDestinationFilterSensitiveLog: (obj: ApiDestination) => any;

export declare const ArchiveFilterSensitiveLog: (obj: Archive) => any;

export declare const CancelReplayRequestFilterSensitiveLog: (obj: CancelReplayRequest) => any;

export declare const CancelReplayResponseFilterSensitiveLog: (obj: CancelReplayResponse) => any;

export declare const CreateApiDestinationRequestFilterSensitiveLog: (obj: CreateApiDestinationRequest) => any;

export declare const CreateApiDestinationResponseFilterSensitiveLog: (obj: CreateApiDestinationResponse) => any;

export declare const CreateArchiveRequestFilterSensitiveLog: (obj: CreateArchiveRequest) => any;

export declare const CreateArchiveResponseFilterSensitiveLog: (obj: CreateArchiveResponse) => any;

export declare const CreateConnectionApiKeyAuthRequestParametersFilterSensitiveLog: (obj: CreateConnectionApiKeyAuthRequestParameters) => any;

export declare const CreateConnectionBasicAuthRequestParametersFilterSensitiveLog: (obj: CreateConnectionBasicAuthRequestParameters) => any;

export declare const ConnectionBodyParameterFilterSensitiveLog: (obj: ConnectionBodyParameter) => any;

export declare const ConnectionHeaderParameterFilterSensitiveLog: (obj: ConnectionHeaderParameter) => any;

export declare const ConnectionQueryStringParameterFilterSensitiveLog: (obj: ConnectionQueryStringParameter) => any;

export declare const ConnectionHttpParametersFilterSensitiveLog: (obj: ConnectionHttpParameters) => any;

export declare const CreateConnectionOAuthClientRequestParametersFilterSensitiveLog: (obj: CreateConnectionOAuthClientRequestParameters) => any;

export declare const CreateConnectionOAuthRequestParametersFilterSensitiveLog: (obj: CreateConnectionOAuthRequestParameters) => any;

export declare const CreateConnectionAuthRequestParametersFilterSensitiveLog: (obj: CreateConnectionAuthRequestParameters) => any;

export declare const CreateConnectionRequestFilterSensitiveLog: (obj: CreateConnectionRequest) => any;

export declare const CreateConnectionResponseFilterSensitiveLog: (obj: CreateConnectionResponse) => any;

export declare const EndpointEventBusFilterSensitiveLog: (obj: EndpointEventBus) => any;

export declare const ReplicationConfigFilterSensitiveLog: (obj: ReplicationConfig) => any;

export declare const PrimaryFilterSensitiveLog: (obj: Primary) => any;

export declare const SecondaryFilterSensitiveLog: (obj: Secondary) => any;

export declare const FailoverConfigFilterSensitiveLog: (obj: FailoverConfig) => any;

export declare const RoutingConfigFilterSensitiveLog: (obj: RoutingConfig) => any;

export declare const CreateEndpointRequestFilterSensitiveLog: (obj: CreateEndpointRequest) => any;

export declare const CreateEndpointResponseFilterSensitiveLog: (obj: CreateEndpointResponse) => any;

export declare const TagFilterSensitiveLog: (obj: Tag) => any;

export declare const CreateEventBusRequestFilterSensitiveLog: (obj: CreateEventBusRequest) => any;

export declare const CreateEventBusResponseFilterSensitiveLog: (obj: CreateEventBusResponse) => any;

export declare const CreatePartnerEventSourceRequestFilterSensitiveLog: (obj: CreatePartnerEventSourceRequest) => any;

export declare const CreatePartnerEventSourceResponseFilterSensitiveLog: (obj: CreatePartnerEventSourceResponse) => any;

export declare const DeactivateEventSourceRequestFilterSensitiveLog: (obj: DeactivateEventSourceRequest) => any;

export declare const DeauthorizeConnectionRequestFilterSensitiveLog: (obj: DeauthorizeConnectionRequest) => any;

export declare const DeauthorizeConnectionResponseFilterSensitiveLog: (obj: DeauthorizeConnectionResponse) => any;

export declare const DeleteApiDestinationRequestFilterSensitiveLog: (obj: DeleteApiDestinationRequest) => any;

export declare const DeleteApiDestinationResponseFilterSensitiveLog: (obj: DeleteApiDestinationResponse) => any;

export declare const DeleteArchiveRequestFilterSensitiveLog: (obj: DeleteArchiveRequest) => any;

export declare const DeleteArchiveResponseFilterSensitiveLog: (obj: DeleteArchiveResponse) => any;

export declare const DeleteConnectionRequestFilterSensitiveLog: (obj: DeleteConnectionRequest) => any;

export declare const DeleteConnectionResponseFilterSensitiveLog: (obj: DeleteConnectionResponse) => any;

export declare const DeleteEndpointRequestFilterSensitiveLog: (obj: DeleteEndpointRequest) => any;

export declare const DeleteEndpointResponseFilterSensitiveLog: (obj: DeleteEndpointResponse) => any;

export declare const DeleteEventBusRequestFilterSensitiveLog: (obj: DeleteEventBusRequest) => any;

export declare const DeletePartnerEventSourceRequestFilterSensitiveLog: (obj: DeletePartnerEventSourceRequest) => any;

export declare const DeleteRuleRequestFilterSensitiveLog: (obj: DeleteRuleRequest) => any;

export declare const DescribeApiDestinationRequestFilterSensitiveLog: (obj: DescribeApiDestinationRequest) => any;

export declare const DescribeApiDestinationResponseFilterSensitiveLog: (obj: DescribeApiDestinationResponse) => any;

export declare const DescribeArchiveRequestFilterSensitiveLog: (obj: DescribeArchiveRequest) => any;

export declare const DescribeArchiveResponseFilterSensitiveLog: (obj: DescribeArchiveResponse) => any;

export declare const DescribeConnectionRequestFilterSensitiveLog: (obj: DescribeConnectionRequest) => any;

export declare const ConnectionApiKeyAuthResponseParametersFilterSensitiveLog: (obj: ConnectionApiKeyAuthResponseParameters) => any;

export declare const ConnectionBasicAuthResponseParametersFilterSensitiveLog: (obj: ConnectionBasicAuthResponseParameters) => any;

export declare const ConnectionOAuthClientResponseParametersFilterSensitiveLog: (obj: ConnectionOAuthClientResponseParameters) => any;

export declare const ConnectionOAuthResponseParametersFilterSensitiveLog: (obj: ConnectionOAuthResponseParameters) => any;

export declare const ConnectionAuthResponseParametersFilterSensitiveLog: (obj: ConnectionAuthResponseParameters) => any;

export declare const DescribeConnectionResponseFilterSensitiveLog: (obj: DescribeConnectionResponse) => any;

export declare const DescribeEndpointRequestFilterSensitiveLog: (obj: DescribeEndpointRequest) => any;

export declare const DescribeEndpointResponseFilterSensitiveLog: (obj: DescribeEndpointResponse) => any;

export declare const DescribeEventBusRequestFilterSensitiveLog: (obj: DescribeEventBusRequest) => any;

export declare const DescribeEventBusResponseFilterSensitiveLog: (obj: DescribeEventBusResponse) => any;

export declare const DescribeEventSourceRequestFilterSensitiveLog: (obj: DescribeEventSourceRequest) => any;

export declare const DescribeEventSourceResponseFilterSensitiveLog: (obj: DescribeEventSourceResponse) => any;

export declare const DescribePartnerEventSourceRequestFilterSensitiveLog: (obj: DescribePartnerEventSourceRequest) => any;

export declare const DescribePartnerEventSourceResponseFilterSensitiveLog: (obj: DescribePartnerEventSourceResponse) => any;

export declare const DescribeReplayRequestFilterSensitiveLog: (obj: DescribeReplayRequest) => any;

export declare const ReplayDestinationFilterSensitiveLog: (obj: ReplayDestination) => any;

export declare const DescribeReplayResponseFilterSensitiveLog: (obj: DescribeReplayResponse) => any;

export declare const DescribeRuleRequestFilterSensitiveLog: (obj: DescribeRuleRequest) => any;

export declare const DescribeRuleResponseFilterSensitiveLog: (obj: DescribeRuleResponse) => any;

export declare const DisableRuleRequestFilterSensitiveLog: (obj: DisableRuleRequest) => any;

export declare const EnableRuleRequestFilterSensitiveLog: (obj: EnableRuleRequest) => any;

export declare const ListApiDestinationsRequestFilterSensitiveLog: (obj: ListApiDestinationsRequest) => any;

export declare const ListApiDestinationsResponseFilterSensitiveLog: (obj: ListApiDestinationsResponse) => any;

export declare const ListArchivesRequestFilterSensitiveLog: (obj: ListArchivesRequest) => any;

export declare const ListArchivesResponseFilterSensitiveLog: (obj: ListArchivesResponse) => any;

export declare const ListConnectionsRequestFilterSensitiveLog: (obj: ListConnectionsRequest) => any;

export declare const ConnectionFilterSensitiveLog: (obj: Connection) => any;

export declare const ListConnectionsResponseFilterSensitiveLog: (obj: ListConnectionsResponse) => any;

export declare const ListEndpointsRequestFilterSensitiveLog: (obj: ListEndpointsRequest) => any;

export declare const EndpointFilterSensitiveLog: (obj: Endpoint) => any;

export declare const ListEndpointsResponseFilterSensitiveLog: (obj: ListEndpointsResponse) => any;

export declare const ListEventBusesRequestFilterSensitiveLog: (obj: ListEventBusesRequest) => any;

export declare const EventBusFilterSensitiveLog: (obj: EventBus) => any;

export declare const ListEventBusesResponseFilterSensitiveLog: (obj: ListEventBusesResponse) => any;

export declare const ListEventSourcesRequestFilterSensitiveLog: (obj: ListEventSourcesRequest) => any;

export declare const EventSourceFilterSensitiveLog: (obj: EventSource) => any;

export declare const ListEventSourcesResponseFilterSensitiveLog: (obj: ListEventSourcesResponse) => any;

export declare const ListPartnerEventSourceAccountsRequestFilterSensitiveLog: (obj: ListPartnerEventSourceAccountsRequest) => any;

export declare const PartnerEventSourceAccountFilterSensitiveLog: (obj: PartnerEventSourceAccount) => any;

export declare const ListPartnerEventSourceAccountsResponseFilterSensitiveLog: (obj: ListPartnerEventSourceAccountsResponse) => any;

export declare const ListPartnerEventSourcesRequestFilterSensitiveLog: (obj: ListPartnerEventSourcesRequest) => any;

export declare const PartnerEventSourceFilterSensitiveLog: (obj: PartnerEventSource) => any;

export declare const ListPartnerEventSourcesResponseFilterSensitiveLog: (obj: ListPartnerEventSourcesResponse) => any;

export declare const ListReplaysRequestFilterSensitiveLog: (obj: ListReplaysRequest) => any;

export declare const ReplayFilterSensitiveLog: (obj: Replay) => any;

export declare const ListReplaysResponseFilterSensitiveLog: (obj: ListReplaysResponse) => any;

export declare const ListRuleNamesByTargetRequestFilterSensitiveLog: (obj: ListRuleNamesByTargetRequest) => any;

export declare const ListRuleNamesByTargetResponseFilterSensitiveLog: (obj: ListRuleNamesByTargetResponse) => any;

export declare const ListRulesRequestFilterSensitiveLog: (obj: ListRulesRequest) => any;

export declare const RuleFilterSensitiveLog: (obj: Rule) => any;

export declare const ListRulesResponseFilterSensitiveLog: (obj: ListRulesResponse) => any;

export declare const ListTagsForResourceRequestFilterSensitiveLog: (obj: ListTagsForResourceRequest) => any;

export declare const ListTagsForResourceResponseFilterSensitiveLog: (obj: ListTagsForResourceResponse) => any;

export declare const ListTargetsByRuleRequestFilterSensitiveLog: (obj: ListTargetsByRuleRequest) => any;

export declare const BatchArrayPropertiesFilterSensitiveLog: (obj: BatchArrayProperties) => any;

export declare const BatchRetryStrategyFilterSensitiveLog: (obj: BatchRetryStrategy) => any;

export declare const BatchParametersFilterSensitiveLog: (obj: BatchParameters) => any;

export declare const DeadLetterConfigFilterSensitiveLog: (obj: DeadLetterConfig) => any;

export declare const CapacityProviderStrategyItemFilterSensitiveLog: (obj: CapacityProviderStrategyItem) => any;

export declare const AwsVpcConfigurationFilterSensitiveLog: (obj: AwsVpcConfiguration) => any;

export declare const NetworkConfigurationFilterSensitiveLog: (obj: NetworkConfiguration) => any;

export declare const PlacementConstraintFilterSensitiveLog: (obj: PlacementConstraint) => any;

export declare const PlacementStrategyFilterSensitiveLog: (obj: PlacementStrategy) => any;

export declare const EcsParametersFilterSensitiveLog: (obj: EcsParameters) => any;

export declare const HttpParametersFilterSensitiveLog: (obj: HttpParameters) => any;

export declare const InputTransformerFilterSensitiveLog: (obj: InputTransformer) => any;

export declare const KinesisParametersFilterSensitiveLog: (obj: KinesisParameters) => any;

export declare const RedshiftDataParametersFilterSensitiveLog: (obj: RedshiftDataParameters) => any;

export declare const RetryPolicyFilterSensitiveLog: (obj: RetryPolicy) => any;

export declare const RunCommandTargetFilterSensitiveLog: (obj: RunCommandTarget) => any;

export declare const RunCommandParametersFilterSensitiveLog: (obj: RunCommandParameters) => any;

export declare const SageMakerPipelineParameterFilterSensitiveLog: (obj: SageMakerPipelineParameter) => any;

export declare const SageMakerPipelineParametersFilterSensitiveLog: (obj: SageMakerPipelineParameters) => any;

export declare const SqsParametersFilterSensitiveLog: (obj: SqsParameters) => any;

export declare const TargetFilterSensitiveLog: (obj: Target) => any;

export declare const ListTargetsByRuleResponseFilterSensitiveLog: (obj: ListTargetsByRuleResponse) => any;

export declare const PutEventsRequestEntryFilterSensitiveLog: (obj: PutEventsRequestEntry) => any;

export declare const PutEventsRequestFilterSensitiveLog: (obj: PutEventsRequest) => any;

export declare const PutEventsResultEntryFilterSensitiveLog: (obj: PutEventsResultEntry) => any;

export declare const PutEventsResponseFilterSensitiveLog: (obj: PutEventsResponse) => any;

export declare const PutPartnerEventsRequestEntryFilterSensitiveLog: (obj: PutPartnerEventsRequestEntry) => any;

export declare const PutPartnerEventsRequestFilterSensitiveLog: (obj: PutPartnerEventsRequest) => any;

export declare const PutPartnerEventsResultEntryFilterSensitiveLog: (obj: PutPartnerEventsResultEntry) => any;

export declare const PutPartnerEventsResponseFilterSensitiveLog: (obj: PutPartnerEventsResponse) => any;

export declare const ConditionFilterSensitiveLog: (obj: Condition) => any;

export declare const PutPermissionRequestFilterSensitiveLog: (obj: PutPermissionRequest) => any;

export declare const PutRuleRequestFilterSensitiveLog: (obj: PutRuleRequest) => any;

export declare const PutRuleResponseFilterSensitiveLog: (obj: PutRuleResponse) => any;

export declare const PutTargetsRequestFilterSensitiveLog: (obj: PutTargetsRequest) => any;

export declare const PutTargetsResultEntryFilterSensitiveLog: (obj: PutTargetsResultEntry) => any;

export declare const PutTargetsResponseFilterSensitiveLog: (obj: PutTargetsResponse) => any;

export declare const RemovePermissionRequestFilterSensitiveLog: (obj: RemovePermissionRequest) => any;

export declare const RemoveTargetsRequestFilterSensitiveLog: (obj: RemoveTargetsRequest) => any;

export declare const RemoveTargetsResultEntryFilterSensitiveLog: (obj: RemoveTargetsResultEntry) => any;

export declare const RemoveTargetsResponseFilterSensitiveLog: (obj: RemoveTargetsResponse) => any;

export declare const StartReplayRequestFilterSensitiveLog: (obj: StartReplayRequest) => any;

export declare const StartReplayResponseFilterSensitiveLog: (obj: StartReplayResponse) => any;

export declare const TagResourceRequestFilterSensitiveLog: (obj: TagResourceRequest) => any;

export declare const TagResourceResponseFilterSensitiveLog: (obj: TagResourceResponse) => any;

export declare const TestEventPatternRequestFilterSensitiveLog: (obj: TestEventPatternRequest) => any;

export declare const TestEventPatternResponseFilterSensitiveLog: (obj: TestEventPatternResponse) => any;

export declare const UntagResourceRequestFilterSensitiveLog: (obj: UntagResourceRequest) => any;

export declare const UntagResourceResponseFilterSensitiveLog: (obj: UntagResourceResponse) => any;

export declare const UpdateApiDestinationRequestFilterSensitiveLog: (obj: UpdateApiDestinationRequest) => any;

export declare const UpdateApiDestinationResponseFilterSensitiveLog: (obj: UpdateApiDestinationResponse) => any;

export declare const UpdateArchiveRequestFilterSensitiveLog: (obj: UpdateArchiveRequest) => any;

export declare const UpdateArchiveResponseFilterSensitiveLog: (obj: UpdateArchiveResponse) => any;

export declare const UpdateConnectionApiKeyAuthRequestParametersFilterSensitiveLog: (obj: UpdateConnectionApiKeyAuthRequestParameters) => any;

export declare const UpdateConnectionBasicAuthRequestParametersFilterSensitiveLog: (obj: UpdateConnectionBasicAuthRequestParameters) => any;

export declare const UpdateConnectionOAuthClientRequestParametersFilterSensitiveLog: (obj: UpdateConnectionOAuthClientRequestParameters) => any;

export declare const UpdateConnectionOAuthRequestParametersFilterSensitiveLog: (obj: UpdateConnectionOAuthRequestParameters) => any;

export declare const UpdateConnectionAuthRequestParametersFilterSensitiveLog: (obj: UpdateConnectionAuthRequestParameters) => any;

export declare const UpdateConnectionRequestFilterSensitiveLog: (obj: UpdateConnectionRequest) => any;

export declare const UpdateConnectionResponseFilterSensitiveLog: (obj: UpdateConnectionResponse) => any;

export declare const UpdateEndpointRequestFilterSensitiveLog: (obj: UpdateEndpointRequest) => any;

export declare const UpdateEndpointResponseFilterSensitiveLog: (obj: UpdateEndpointResponse) => any;
